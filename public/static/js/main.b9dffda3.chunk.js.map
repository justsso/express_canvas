{"version":3,"sources":["img/xinliceshi5.png","img/qrcode.jpg","pages/Index/Index.js","pages/HaiBao/HaiBao.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","imgSrc","createMyResult","bind","assertThisInitialized","canvas","document","createElement","ctx","getContext","console","log","BgImg","QrImg","title","arr","point","color","description","obj","bgImgPath","qrImgPath","img1","Image","onload","qrimg2","convertImageToCanvas","drawMyImg","x","y","num","r","fillStyle","strokeStyle","font","textAlign","fillText","drawImage","i","length","write_text_other_line_auto","toDataURL","setState","src","url","Promise","resolve","reject","image","onerror","Error","x1","y1","x2","y2","x3","y3","type","beginPath","moveTo","lineTo","closePath","conf","width","translate","direction","textX","Math","cos","PI","textY","sin","pointX","pointY","arc","lineWidth","stroke","rotate","six","X","Y","push","lineJoin","r0","r1","drawSanjiao","height","concat","align","text","line_count","line_height","text_indent","first_row_line_count","row_count","substring","react_default","a","className","alt","React","Component","HaiBao","App","BrowserRouter","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4SCySzBC,2BAnSX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAQ,IAEZR,EAAKS,eAAiBT,EAAKS,eAAeC,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALPA,mFASf,IAAIY,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MA2C5BC,QAAQC,IAAIC,IAAOC,KACnBjB,KAAKM,eAAeG,EAAQG,EA1ClB,CACNM,MAAO,iCACPC,IAAK,CACD,CACID,MAAO,qBACPE,MAAO,GACPC,MAAO,UACPC,YAAa,4KAEjB,CACIJ,MAAO,2BACPE,MAAO,GACPC,MAAO,UACPC,YAAa,4KAEjB,CACIJ,MAAO,2BACPE,MAAO,GACPC,MAAO,UACPC,YAAa,4KAEjB,CACIJ,MAAO,2BACPE,MAAO,GACPC,MAAO,UACPC,YAAa,sKAEjB,CACIJ,MAAO,eACPE,MAAO,IACPC,MAAO,UACPC,YAAa,0JAEjB,CACIJ,MAAO,2BACPE,MAAO,GACPC,MAAO,UACPC,YAAa,4JAKaN,IAAOC,oFAG5BR,EAAQG,EAAKW,EAAKC,EAAWC,2EAM1C5B,EAAQG,MACR0B,EAAO,IAAIC,OACVC,OAAS,WACV,IAAIC,EAAS,IAAIF,MACjBE,EAAOD,OAAS,WACZ/B,EAAMiC,qBAAqBrB,EAAQG,EAAKc,GACxC7B,EAAMkC,UAAUnB,EAAK,CACjBoB,EAAG,IACHC,EAAG,IACHC,IAAK,EACLC,EAAG,IACHC,UAAW,OACXC,YAAa,QACdd,GAEHX,EAAI0B,KAAO,gCACX1B,EAAI2B,UAAY,OAChB3B,EAAIwB,UAAY,UAChBxB,EAAI4B,SAASjB,EAAIL,OAAQ,IAAK,KAC9BN,EAAIwB,UAAY,OAChBxB,EAAI4B,SAAS,eAAM,KAAM,KAEzB5B,EAAI6B,UAAUZ,GAAS,GAAI,KAAM,IAAK,KACtCjB,EAAIwB,UAAY,OAChBxB,EAAI0B,KAAO,gCACX,IAAK,IAAII,EAAI,EAAGA,EAAInB,EAAIJ,IAAIwB,OAAQD,IAChC9B,EAAI4B,SAASjB,EAAIJ,IAAIuB,GAAGxB,OAAQ,IAAK,IAAU,IAAJwB,GAE/C9B,EAAI0B,KAAO,gCACX,IAAK,IAAII,EAAI,EAAGA,EAAInB,EAAIJ,IAAIwB,OAAQD,IAChC7C,EAAM+C,2BAA2BhC,EAAK,GAAI,OAAQ,OAAQW,EAAIJ,IAAIuB,GAAGpB,YAAa,GAAI,IAAU,IAAJoB,EAAS,GAAI,GAAI,GAEjH,IAAIrC,EAASI,EAAOoC,UAAU,aAC9BhD,EAAMiD,SAAS,CACXzC,OAAQA,KAGhBwB,EAAOkB,IAAMtB,GAEjBC,EAAKqB,IAAMvB,kJAoCFwB,GACT,OAAO,IAAIC,QAAQ,SAASC,EAASC,GACjC,IAAMC,EAAQ,IAAIzB,MAClByB,EAAMxB,OAAS,WACXsB,EAAQE,IAEZA,EAAMC,QAAU,WACZF,EAAO,IAAIG,MAAM,2BAA6BN,KAGlDI,EAAML,IAAMC,wCAIRpC,EAAK2C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIvC,EAAOwC,GAC5CjD,EAAIkD,YACJlD,EAAImD,OAAOR,EAAIC,GACf5C,EAAIoD,OAAOP,EAAIC,GACf9C,EAAIoD,OAAOL,EAAIC,GACfhD,EAAIiD,EAAO,SAAWxC,EACtBT,EAAIqD,YACJrD,EAAIiD,uCAGEjD,EAAKsD,EAAM3C,GACjB,IAAIS,EAAIkC,GAAQA,EAAKlC,GAAK,EACtBC,EAAIiC,GAAQA,EAAKjC,GAAK,EACtBC,EAAMgC,GAAQA,EAAKhC,KAAO,EAC1BC,EAAI+B,GAAQA,EAAK/B,GAAK,IACtBgC,EAAQD,GAAQA,EAAKC,OAAS,EAC9B/B,EAAY8B,GAAQA,EAAK9B,UACzBC,EAAc6B,GAAQA,EAAK7B,YAC/BzB,EAAIwD,UAAUpC,EAAGC,GACjBrB,EAAI0B,KAAO,gCACX1B,EAAIyD,UAAY,MAChBzD,EAAI2B,UAAY,SAChB3B,EAAIwB,UAAYA,EAChB,IAAK,IAAIM,EAAI,EAAGA,EAAIR,EAAKQ,IAAK,CAC1B,IAAI4B,GAASnC,EAAI,IAAMoC,KAAKC,IAAK,EAAID,KAAKE,GAAK/B,EAAIR,EAAOqC,KAAKE,GAAK,GAChEC,GAASvC,EAAI,IAAMoC,KAAKI,IAAK,EAAIJ,KAAKE,GAAK/B,EAAIR,EAAOqC,KAAKE,GAAK,GAChEG,EAASN,EACTO,EAASH,EAAQ,GACrB9D,EAAI4B,SAASjB,EAAIJ,IAAIuB,GAAGxB,MAAOoD,EAAOI,GACtC9D,EAAI4B,SAASjB,EAAIJ,IAAIuB,GAAGtB,MAAOwD,EAAQC,GAG3CjE,EAAIkD,YACJlD,EAAIkE,IAAI,EAAG,EAAG3C,EAAG,EAAG,EAAIoC,KAAKE,IAAI,GACjC7D,EAAImE,UAAYZ,EAChBvD,EAAIyB,YAAcA,EAClBzB,EAAIoE,SAEJpE,EAAIqE,OAAOV,KAAKE,GAAK,GACrB7D,EAAIkD,YACJlD,EAAImD,OAAO5B,EAAG,GAEd,IADA,IAAI+C,EAAM,GACDxC,EAAI,EAAGA,EAAIR,EAAKQ,IAAK,CAC1B,IAAIyC,EAAIhD,EAAIoC,KAAKC,IAAI,EAAID,KAAKE,GAAK/B,EAAIR,GACnCkD,EAAIjD,EAAIoC,KAAKI,IAAI,EAAIJ,KAAKE,GAAK/B,EAAIR,GACvCgD,EAAIG,KAAK,CAACF,EAAGC,IACbxE,EAAIoD,OAAOmB,EAAGC,GAElBxE,EAAIqD,YACJrD,EAAIyB,YAAcA,EAClBzB,EAAImE,UAAYZ,EAChBvD,EAAI0E,SAAW,QACf1E,EAAIoE,SAEJ,IAAK,IAAItC,EAAI,EAAGA,EAAIwC,EAAIvC,OAAQD,IAC5B9B,EAAIkD,YACJlD,EAAImD,OAAO,EAAG,GACdnD,EAAIoD,OAAOkB,EAAIxC,GAAG,GAAIwC,EAAIxC,GAAG,IAC7B9B,EAAIqD,YACJrD,EAAIoE,SAKRpE,EAAIkD,YACJlD,EAAImD,OAAO5B,EAAG,GACd,IAAIoD,EAAKhE,EAAIJ,IAAI,GAAGC,MAAQ,IAAMe,EAClC+C,EAAIvC,OAAS,EACb/B,EAAImD,OAAOwB,EAAI,GACf,IAAK,IAAI7C,EAAI,EAAGA,EAAIR,EAAKQ,IAAK,CAC1B,IAAI8C,EAAKjE,EAAIJ,IAAIuB,GAAGtB,MAAQ,IAAMe,EAE9BgD,EAAIK,EAAKjB,KAAKC,IAAI,EAAID,KAAKE,GAAK/B,EAAIR,GACpCkD,EAAII,EAAKjB,KAAKI,IAAI,EAAIJ,KAAKE,GAAK/B,EAAIR,GACxCgD,EAAIG,KAAK,CAACF,EAAGC,IACbxE,EAAIoD,OAAOmB,EAAGC,GAElBxE,EAAIqD,YACJrD,EAAIyB,YAAcA,EAClBzB,EAAImE,UAAYZ,EAChBvD,EAAI0E,SAAW,QACf1E,EAAIoE,SAEJ,IAAK,IAAItC,EAAI,EAAGA,EAAIwC,EAAIvC,OAAQD,IACxBA,IAAMwC,EAAIvC,OAAS,EACnB3C,KAAKyF,YAAY7E,EAAK,EAAG,EAAGsE,EAAIxC,GAAG,GAAIwC,EAAIxC,GAAG,GAAIwC,EAAI,GAAG,GAAIA,EAAI,GAAG,GAAI3D,EAAIJ,IAAIuB,GAAGrB,MAAO,QAE1FrB,KAAKyF,YAAY7E,EAAK,EAAG,EAAGsE,EAAIxC,GAAG,GAAIwC,EAAIxC,GAAG,GAAIwC,EAAIxC,EAAI,GAAG,GAAIwC,EAAIxC,EAAI,GAAG,GAAInB,EAAIJ,IAAIuB,GAAGrB,MAAO,QAG1G,IAAK,IAAIqB,EAAI,EAAGA,EAAIwC,EAAIvC,OAAQD,IAC5B9B,EAAIkD,YACJlD,EAAImD,OAAO,EAAG,GACdnD,EAAIoD,OAAOkB,EAAIxC,GAAG,GAAIwC,EAAIxC,GAAG,IAC7B9B,EAAIqD,YACJrD,EAAIoE,SAERpE,EAAIqE,QAAQV,KAAKE,GAAK,gDAGLhE,EAAQG,EAAKwC,GAC9B3C,EAAO0D,MAAQf,EAAMe,MACrB1D,EAAOiF,OAAStC,EAAMsC,OACtB5E,QAAQC,IAAIqC,EAAO,KACnBtC,QAAQC,IAAIqC,EAAMe,MAAOf,EAAMsC,QAC/B5E,QAAQC,IAAR,qBAAA4E,OAAuBlF,EAAO0D,MAA9B,yBAAAwB,OAAiDlF,EAAOiF,SACxDjF,EAAOI,WAAW,MAAM4B,UAAUW,EAAO,EAAG,GAC5CxC,EAAI6B,UAAUW,EAAO,EAAG,sDAGDxC,EAAK0B,EAAMsD,EAAOvE,EAAOwE,EAAM7D,EAAGC,EAAG6D,EAAYC,EAAaC,GACrFpF,EAAI0B,KAAOA,EACX1B,EAAI2B,UAAYqD,EAChBhF,EAAIwB,UAAYf,EAIhB,IAHA,IACI4E,EACIzC,EAFJ0C,EAAYL,EAAKlD,OAASmD,EAGrBpD,EAAI,EAAGA,GAAKwD,EAAWxD,IACnB,GAALA,GACA9B,EAAI4B,SAASqD,EAAKM,UAAU,EAAIL,GAAcpD,EAAI,GAAKsD,GAAehE,EAAmB,GAAdgE,EAAmB/D,EAAK8D,EAAcrD,GACjHuD,EAAwBH,GAAcpD,EAAI,GAAKsD,IAG/CpF,EAAI4B,SAASqD,EAAKM,UAAUL,GAAcpD,EAAI,GAAKuD,EAAsBA,EAAuBH,EAAapD,GAAIV,EAAGC,EAAK8D,EAAcrD,GACvIc,EAAKvB,EAAK8D,EAAcrD,GAGhC,OAAOc,mCAIP,OACI4C,EAAAC,EAAA1F,cAAA,OAAK2F,UAAU,OACXF,EAAAC,EAAA1F,cAAA,OAAKoC,IAAK/C,KAAKI,MAAMC,OAAQkG,IAAI,aA9R7BC,IAAMC,4BCsBXC,cAjBX,SAAAA,EAAY9G,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,GAAA5G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KACVJ,uHAQN,OACIwG,EAAAC,EAAA1F,cAAA,OAAK2F,UAAU,UAAf,iBAXSE,IAAMC,WCUZE,mLAXP,OACIP,EAAAC,EAAA1F,cAACiG,EAAA,EAAD,KACIR,EAAAC,EAAA1F,cAAA,WACIyF,EAAAC,EAAA1F,cAACkG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrH,IACjCyG,EAAAC,EAAA1F,cAACkG,EAAA,EAAD,CAAOC,KAAK,gBAAgBE,UAAWN,aANzCD,aCMEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAA1F,cAAC6G,EAAD,MAAS9G,SAAS+G,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b9dffda3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/xinliceshi5.21e0d0d3.png\";","module.exports = __webpack_public_path__ + \"static/media/qrcode.9a33f354.jpg\";","import React from 'react';\nimport BgImg from \"../../img/xinliceshi5.png\";\nimport QrImg from \"../../img/qrcode.jpg\";\nimport FontFaceObserver from \"fontfaceobserver\";\nimport './Index.css';\nclass Index extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgSrc: ''\n        };\n        this.createMyResult = this.createMyResult.bind(this);\n    }\n\n    componentDidMount() {\n        let canvas = document.createElement('canvas');\n        let ctx = canvas.getContext('2d');\n        // 只需改变obj即可\n        let obj = {\n            title: '情绪稳定性',\n            arr: [\n                {\n                    title: '想象力',\n                    point: 60,\n                    color: '#de6338',\n                    description: '你富有想象力，不满足世界的平淡无奇，幻想将其变得丰富多彩'\n                },\n                {\n                    title: '艺术兴趣',\n                    point: 90,\n                    color: '#61c9b1',\n                    description: '你艺术天赋极高，喜欢美好的事物，热衷一切与艺术相关的活动'\n                },\n                {\n                    title: '情绪感官',\n                    point: 80,\n                    color: '#51a5c8',\n                    description: '你很敏感，可以快速感受并愿意表露自己情绪，不管是喜怒哀乐'\n                },\n                {\n                    title: '冒险精神',\n                    point: 79,\n                    color: '#4431c4',\n                    description: '你喜欢追求新鲜刺激的事情，抗拒墨守成规和一成不变的生活'\n                },\n                {\n                    title: '智力',\n                    point: 100,\n                    color: '#60cb49',\n                    description: '你勤思考，热衷智力训练，全心拥抱新奇、不寻常的想法'\n                },\n                {\n                    title: '自由主义',\n                    point: 70,\n                    color: '#e4b348',\n                    description: '你敢于并且热衷挑战权威和传统，但是要注意不要走极端'\n                },\n            ]\n        };\n        console.log(BgImg, QrImg);\n        this.createMyResult(canvas, ctx, obj, BgImg, QrImg);\n    }\n\n    async createMyResult(canvas, ctx, obj, bgImgPath, qrImgPath) {\n        // let bg = await this.preloadImage(bgImgPath);\n        // let qr = await this.preloadImage(qrImgPath);\n\n        // let ZhongHei = new FontFaceObserver('ZhongHei');\n        // await ZhongHei.load();\n        let _this = this;\n        let img1 = new Image();\n        img1.onload = function(){\n            let qrimg2 = new Image();\n            qrimg2.onload = function () {\n                _this.convertImageToCanvas(canvas, ctx, img1);\n                _this.drawMyImg(ctx, {\n                    x: 375,\n                    y: 800,\n                    num: 6,\n                    r: 200,\n                    fillStyle: '#000',\n                    strokeStyle: '#000'\n                }, obj);\n\n                ctx.font = \"48px 微软雅黑\";\n                ctx.textAlign = 'left';\n                ctx.fillStyle = '#c9174b';\n                ctx.fillText(obj.title, -60, -470);\n                ctx.fillStyle = '#000';\n                ctx.fillText('测试', 200, -470);\n\n                ctx.drawImage(qrimg2, -70, 1225, 186, 186);\n                ctx.fillStyle = '#000';\n                ctx.font = '44px 微软雅黑';\n                for (let i = 0; i < obj.arr.length; i++) {\n                    ctx.fillText(obj.arr[i].title, -270, 570 + i * 100);\n                }\n                ctx.font = '22px 微软雅黑';\n                for (let i = 0; i < obj.arr.length; i++) {\n                    _this.write_text_other_line_auto(ctx, \"\", \"left\", \"#000\", obj.arr[i].description, 10, 555 + i * 101, 13, 24, 0);\n                }\n                let imgSrc = canvas.toDataURL(\"image/png\");\n                _this.setState({\n                    imgSrc: imgSrc\n                })\n            };\n            qrimg2.src = qrImgPath;\n        };\n        img1.src = bgImgPath;\n\n\n        // this.convertImageToCanvas(canvas, ctx, bg);\n        // this.drawMyImg(ctx, {\n        //     x: 375,\n        //     y: 800,\n        //     num: 6,\n        //     r: 200,\n        //     fillStyle: '#000',\n        //     strokeStyle: '#000'\n        // }, obj);\n        //\n        // ctx.font = \"48px ZhongHei\";\n        // ctx.textAlign = 'left';\n        // ctx.fillStyle = '#c9174b';\n        // ctx.fillText(obj.title, -60, -470);\n        // ctx.fillStyle = '#000';\n        // ctx.fillText('测试', 200, -470);\n        //\n        // ctx.drawImage(qr, -70, 1225, 186, 186);\n        // ctx.fillStyle = '#000';\n        // ctx.font = '44px ZhongHei';\n        // for (let i = 0; i < obj.arr.length; i++) {\n        //     ctx.fillText(obj.arr[i].title, -270, 570 + i * 100);\n        // }\n        // ctx.font = '22px ZhongHei';\n        // for (let i = 0; i < obj.arr.length; i++) {\n        //     this.write_text_other_line_auto(ctx, \"\", \"left\", \"#000\", obj.arr[i].description, 10, 555 + i * 101, 13, 24, 0);\n        // }\n        // let imgSrc = canvas.toDataURL(\"image/png\");\n        // this.setState({\n        //     imgSrc: imgSrc\n        // })\n    }\n\n    preloadImage(url) {\n        return new Promise(function(resolve, reject) {\n            const image = new Image();\n            image.onload = function() {\n                resolve(image);\n            };\n            image.onerror = function() {\n                reject(new Error('Could not load image at ' + url));\n            };\n\n            image.src = url;\n        });\n    }\n\n    drawSanjiao(ctx, x1, y1, x2, y2, x3, y3, color, type) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.lineTo(x3, y3);\n        ctx[type + 'Style'] = color;\n        ctx.closePath();\n        ctx[type]();\n    };\n\n    drawMyImg(ctx, conf, obj) {\n        let x = conf && conf.x || 0;  //中心点x坐标\n        let y = conf && conf.y || 0;  //中心点y坐标\n        let num = conf && conf.num || 3;   //图形边的个数\n        var r = conf && conf.r || 100;   //图形的半径\n        var width = conf && conf.width || 5;\n        var fillStyle = conf && conf.fillStyle;\n        var strokeStyle = conf && conf.strokeStyle;\n        ctx.translate(x, y);\n        ctx.font = \"24px 微软雅黑\";    //设置字体和字体大小\n        ctx.direction = 'ltr';\n        ctx.textAlign = 'center';\n        ctx.fillStyle = fillStyle;\n        for (let i = 0; i < num; i++) {\n            var textX = (r + 55) * Math.cos((2 * Math.PI * i / num) + Math.PI / 4);  // 字对的上位置\n            var textY = (r + 55) * Math.sin((2 * Math.PI * i / num) + Math.PI / 4);\n            var pointX = textX;\n            var pointY = textY + 25;\n            ctx.fillText(obj.arr[i].title, textX, textY);\n            ctx.fillText(obj.arr[i].point, pointX, pointY);\n        }\n        // 画圆形\n        ctx.beginPath();\n        ctx.arc(0, 0, r, 0, 2 * Math.PI, true);\n        ctx.lineWidth = width;\n        ctx.strokeStyle = strokeStyle;\n        ctx.stroke();\n\n        ctx.rotate(Math.PI / 4);\n        ctx.beginPath();\n        ctx.moveTo(r, 0);\n        let six = [];\n        for (let i = 0; i < num; i++) {\n            var X = r * Math.cos(2 * Math.PI * i / num);\n            var Y = r * Math.sin(2 * Math.PI * i / num);\n            six.push([X, Y]);\n            ctx.lineTo(X, Y);\n        }\n        ctx.closePath();\n        ctx.strokeStyle = strokeStyle;\n        ctx.lineWidth = width;\n        ctx.lineJoin = 'round';\n        ctx.stroke();\n        // 画六条射线\n        for (let i = 0; i < six.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(six[i][0], six[i][1]);\n            ctx.closePath();\n            ctx.stroke();\n        }\n\n        // 画不规则多边形&不同颜色\n        // 求出不同的半径 算出 坐标， 然后连线\n        ctx.beginPath();\n        ctx.moveTo(r, 0);\n        let r0 = obj.arr[0].point / 100 * r;\n        six.length = 0;\n        ctx.moveTo(r0, 0);\n        for (let i = 0; i < num; i++) {\n            let r1 = obj.arr[i].point / 100 * r;\n\n            let X = r1 * Math.cos(2 * Math.PI * i / num);\n            let Y = r1 * Math.sin(2 * Math.PI * i / num);\n            six.push([X, Y]);\n            ctx.lineTo(X, Y);\n        }\n        ctx.closePath();\n        ctx.strokeStyle = strokeStyle;\n        ctx.lineWidth = width;\n        ctx.lineJoin = 'round';\n        ctx.stroke();\n\n        for (let i = 0; i < six.length; i++) {\n            if (i === six.length - 1) {\n                this.drawSanjiao(ctx, 0, 0, six[i][0], six[i][1], six[0][0], six[0][1], obj.arr[i].color, 'fill')\n            } else {\n                this.drawSanjiao(ctx, 0, 0, six[i][0], six[i][1], six[i + 1][0], six[i + 1][1], obj.arr[i].color, 'fill')\n            }\n        }\n        for (let i = 0; i < six.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(six[i][0], six[i][1]);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        ctx.rotate(-Math.PI / 4);\n    }\n\n    convertImageToCanvas(canvas, ctx, image) {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        console.log(image, 226);\n        console.log(image.width, image.height);\n        console.log(`canvas宽：${canvas.width}, canvas高： ${canvas.height}`);\n        canvas.getContext(\"2d\").drawImage(image, 0, 0);\n        ctx.drawImage(image, 0, 0);\n    }\n\n    write_text_other_line_auto(ctx, font, align, color, text, x, y, line_count, line_height, text_indent) {\n        ctx.font = font;\n        ctx.textAlign = align;\n        ctx.fillStyle = color;\n        let row_count = text.length / line_count;\n        let first_row_line_count;\n        let x1, y1;\n        for (let i = 0; i <= row_count; i++) {\n            if (i == 0) {\n                ctx.fillText(text.substring(0, (line_count * (i + 1) - text_indent)), x + (text_indent * 26), y + (line_height * i));\n                first_row_line_count = (line_count * (i + 1) - text_indent);\n            }\n            else {\n                ctx.fillText(text.substring(line_count * (i - 1) + first_row_line_count, first_row_line_count + line_count * i), x, y + (line_height * i));\n                y1 = y + (line_height * i);\n            }\n        }\n        return y1;\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <img src={this.state.imgSrc} alt=\"\"/>\n            </div>\n        )\n    }\n}\n\nexport default Index;\n","import React from 'react';\n// react-canvas这个库已死\n\n// 推荐使用 https://konvajs.github.io/docs/react/\n// react-konva库\n// react-konva\n\n// 翻译  http://www.ucamc.com/e-learning/javascript/242-react-canvas.html\n\nclass HaiBao extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"HaiBao\">\n                Haibao\n            </div>\n        )\n    }\n}\n\nexport default HaiBao;\n","import React, {Component} from 'react';\nimport Index from './pages/Index/Index';\n\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport HaiBao from \"./pages/HaiBao/HaiBao\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path='/' exact component={Index}></Route>\n                    <Route path='/react-canvas' component={HaiBao}></Route>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}